// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  name        String
  username    String    @unique
  surname     String?
  age         Int?
  image_url   String?
  description String?
  password    String
  posts       Post[]
  likes       Like[]    @relation("user_likes")
  comments    Comment[] @relation("user_comments")
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String?
  text       String
  image_url  String?
  user_id    Int
  user       User      @relation(fields: [user_id], references: [id])
  likes      Like[]
  comments   Comment[]
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt 
}

model Like {
  id      Int  @id @default(autoincrement())
  user_id Int  
  post_id Int  @unique
  post    Post @relation(fields: [post_id], references: [id])
  user    User @relation("user_likes", fields: [user_id], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt 
}

model Comment {
  id      Int    @id @default(autoincrement())
  text    String
  user_id Int
  post_id Int
  post    Post   @relation(fields: [post_id], references: [id])
  user    User   @relation("user_comments", fields: [user_id], references: [id])
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt 
}
